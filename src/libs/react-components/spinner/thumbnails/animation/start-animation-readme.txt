Основные случаи в анимации Thumbnails (по знаку # можно найти место в коде)

//#1 - поворот в пределах children.length

//#2 - листая обратно,
вернулись от index0 к последней миниатюре ...8, 9 <- 0, 1, 2...

//#3 - листая вперёд, от последней миниатюры вернулись к первой
...8, 9 -> 0, 1, 2...
В этом случае сначала установится отрицательное значение поворота
для circleRef и thumbsRef (для миниатюр - положительное), чтобы движение
было в положительную сторону


    getTransformRotate используется для подхвата текущего значения угла поворота
элемента. Возвращает только 0 - 360 deg! Значения, выходящие за диапазон,
пересчитываются.

Обычно поворот элементов circleRef и thumbsRef лежит в диапазоне 0 - 360
градусов (миниатюры имеют то же значение с противоположным знаком).

    В случае #3, когда достигнут последний элемент и происходит переход снова
к первому, старт анимации начинается из отрицательного значения, чтобы
завершиться в допустимом диапазоне значений.

    Если пользователь повторно до окончания анимации нажимает кнопку "вперёд",
пока угол ещё отрицательный, getTransformRotate определит его неверно.
Например, -10 градусов будут пересчитаны в 360 - 10 = 350 градусов. Поэтому
анимация будет неправильная.

Чтобы решить проблему (по знаку @ можно найти место в коде):
//@1 Если наступает указанный случай, в полученный реф minusAngle ставим true.

В случае #2 угол может быть отрицательным, но корректировки не требуются

//@2 В начале следующей анимации, перед её остановкой, сохраняем актуальное значение
угла из предыдущего объекта анимации (actualAngle)

//@3 Когда получаем стартовое значение для анимации calcStartAngle(), смотрим был ли
в прошлый раз случай #3. Если - да, то делаем actualAngle стартовым значением.

В очень редких ситуациях в анимации могут быть ошибки, поэтому колбэк resetTransform
выполняется после каждой анимации, чтобы все элементы заняли правильные позиции