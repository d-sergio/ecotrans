createParams()
В пропс есть только объект params со всеми настройками. Слайдер сразу
проверяет все ли поля в нём заполнены и добавляет дефолтные значения,
если необходимо. Внутри слайдера вся работа идёт уже не с props, а
с params

Алгоритм:

1. createSlides() создаёт слайды на рендере

2. Первый useEffect служит только для инициализации. Добавляет children
в params и задаёт геометрию слайдера через updateSlideWidth() и
updateCarouselCoords()

2. updateSlideWidth() задаёт ширину слайдов

3. updateCarouselCoords() уточняет координаты carousel, чтобы они
соответствовали текущей позиции currentPosition

4. Обработчик buttonHandler() сообщает в setNewPosition(), что позицию
слайдера необходимо сдвинуть на значение shift с использованием анимации
(на это указывает отличное от нуля значение animDuration)

5. setNewPosition() меняет позицию и добавляет/удаляет слайды слева или справа
по необходимости. По сути он создаёт условия для анимации, которая последует
за setState:
    - добавляются, если надо, новые слайды, чтобы всегда было куда прокручивать
    слайдер
    - с какой позиции надо будет прокручивать (state.prevState) и до какой
    позиции (state.currentPosition)
    - лишние слайды удаляются, чтобы не нагружать браузер

6. useEffect, обнаружив, что animDuration имеет отличное от нуля значение
запускает анимацию animateMove(). А перед этим, если были добавлены/удалены
слайды, корректирует геометрию слайдера, но устанавливает его в предыдущую
позицию, так как надо анимировать переход от неё к новой позиции.
    Если animDuration = 0, то без анимации слайдер просто переключается в
новую позицию.

7. animateMove() управляет анимацией:
    - останавливает текущую анимацию, если она осуществляется
    - передаёт в createAnimation() данные для расчёта анимации и получает оттуда
    объект анимации
    - запускает анимацию

8. createAnimation() создаёт и возвращает объект анимации